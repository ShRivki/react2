{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\REACT PROJECT\\\\project\\\\src\\\\components\\\\\\u200EShoppingList.js\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { useState, useEffect } from \"react\";\n// import { type } from \"@testing-library/user-event/dist/type\";\n// import * as actiontype from '../Store/actions'\n// export default () => {\n//    const user = useSelector(state => (state.userId));\n//    const [shoppingList, SetShoppingList] = useState([])\n\n//    const addProduct = (product) => {\n//       const findIndex = shoppingList.findIndex(x => x.Id == product.Id);\n//       axios.post(`http://localhost:8080/api/bay/edit`, { Name: product.Name, UserId: user, Count: product.Count + operator })\n//    }\n//    const [operator, SetOperator] = useState(null);\n//    //   const  {shoppingList}  = useSelector(state => ({ shoppingList: state.shoppingList }));\n//    const dispach = useDispatch();\n//    useEffect(() => {\n//       axios.get(`http://localhost:8080/api/bay/${user}`).then(data => {\n//          SetShoppingList(data.data);\n//       }).catch(() => { })\n//       // dispach({type:actiontype.GET_SHOPPING_LIST});\n\n//       // if (operator != null)\n//       //    operator == -1 && product.Count - 1 == 0 ? axios.post(`http://localhost:8080/api/bay/edit`, product.Name, user, product.Count + operator).then((data) => {\n//       //       console.log(data)\n//       //    }) : axios.post(`http://localhost:8080/api/bay/delete/${user}/${product.Id}`).then((data) => console.log(data));\n//    }, []);\n//    console.log(shoppingList);\n//    return (<div>\n//       {shoppingList.map((product) =>\n//          <div class=\"product\">\n//             <label>מוצר: </label>\n//             {product.Name}\n//             <label> כמות: </label>\n//             {product.Count}\n//             <button onClick={() => {\n//                if (product.Count == 1) {\n//                   axios.post(`http://localhost:8080/api/bay/delete/${product.Id}`).then(() => {\n//                      alert(\"נמחק\")\n//                   }).catch(() => {\n//                      alert(\"שגיאה \")\n//                   })\n//                }\n//             }}>-</button>\n//             <button onClick={() => {\n//                alert(`+1 ${product.Name}`)\n//             }}>+</button>\n//          </div>\n//       )}\n//    </div>\n//    )\n// }\n\n// jest-dom adds custom jest matchers for asserting on DOM nodes.\n\n// allows you to do things like:\n\n// expect(element).toHaveTextContent(/react/i)\n\n// learn more: https://github.com/testing-library/jest-dom\n\n// import '@testing-library/jest-dom';\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShoppingList = userId => {\n  _s();\n  const nav = useNavigate();\n  console.log(userId);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n  const getData = () => {\n    axios.get(`http://localhost:8080/api/bay/${userId.userId}`).then(x => {\n      console.log(x.data);\n      setData(x.data);\n    }).catch(err => console.log(err));\n  };\n  const deleted = product => {\n    axios.post(`http://localhost:8080/api/bay/delete/${product.Id}`).then(x => {\n      console.log(x.data);\n      alert(\"נמחק\");\n      getData();\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data === null || data === void 0 ? void 0 : data.map((product, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.Name, \"  \", product.Type, \"  \", product.Count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleted(product),\n        children: \"gg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_s(ShoppingList, \"XK5dvcAOkryPITvz6/caSEpvF/s=\", false, function () {\n  return [useNavigate];\n});\n_c = ShoppingList;\nexport default ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["axios","useEffect","useState","useSelector","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ShoppingList","userId","_s","nav","console","log","data","setData","getData","get","then","x","catch","err","deleted","product","post","Id","alert","children","map","index","Name","Type","Count","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/REACT PROJECT/project/src/components/‎ShoppingList.js"],"sourcesContent":["// import axios from \"axios\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { type } from \"@testing-library/user-event/dist/type\";\r\n// import * as actiontype from '../Store/actions'\r\n// export default () => {\r\n//    const user = useSelector(state => (state.userId));\r\n//    const [shoppingList, SetShoppingList] = useState([])\r\n\r\n\r\n//    const addProduct = (product) => {\r\n//       const findIndex = shoppingList.findIndex(x => x.Id == product.Id);\r\n//       axios.post(`http://localhost:8080/api/bay/edit`, { Name: product.Name, UserId: user, Count: product.Count + operator })\r\n//    }\r\n//    const [operator, SetOperator] = useState(null);\r\n//    //   const  {shoppingList}  = useSelector(state => ({ shoppingList: state.shoppingList }));\r\n//    const dispach = useDispatch();\r\n//    useEffect(() => {\r\n//       axios.get(`http://localhost:8080/api/bay/${user}`).then(data => {\r\n//          SetShoppingList(data.data);\r\n//       }).catch(() => { })\r\n//       // dispach({type:actiontype.GET_SHOPPING_LIST});\r\n\r\n//       // if (operator != null)\r\n//       //    operator == -1 && product.Count - 1 == 0 ? axios.post(`http://localhost:8080/api/bay/edit`, product.Name, user, product.Count + operator).then((data) => {\r\n//       //       console.log(data)\r\n//       //    }) : axios.post(`http://localhost:8080/api/bay/delete/${user}/${product.Id}`).then((data) => console.log(data));\r\n//    }, []);\r\n//    console.log(shoppingList);\r\n//    return (<div>\r\n//       {shoppingList.map((product) =>\r\n//          <div class=\"product\">\r\n//             <label>מוצר: </label>\r\n//             {product.Name}\r\n//             <label> כמות: </label>\r\n//             {product.Count}\r\n//             <button onClick={() => {\r\n//                if (product.Count == 1) {\r\n//                   axios.post(`http://localhost:8080/api/bay/delete/${product.Id}`).then(() => {\r\n//                      alert(\"נמחק\")\r\n//                   }).catch(() => {\r\n//                      alert(\"שגיאה \")\r\n//                   })\r\n//                }\r\n//             }}>-</button>\r\n//             <button onClick={() => {\r\n//                alert(`+1 ${product.Name}`)\r\n//             }}>+</button>\r\n//          </div>\r\n//       )}\r\n//    </div>\r\n//    )\r\n// }\r\n\r\n\r\n\r\n// jest-dom adds custom jest matchers for asserting on DOM nodes.\r\n\r\n// allows you to do things like:\r\n\r\n// expect(element).toHaveTextContent(/react/i)\r\n\r\n// learn more: https://github.com/testing-library/jest-dom\r\n\r\n// import '@testing-library/jest-dom';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ShoppingList = (userId) => {\r\n\r\n    const nav = useNavigate()\r\n\r\n    console.log(userId)\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        getData();\r\n\r\n    }, [])\r\n\r\n    const getData = () => {\r\n\r\n        axios.get(`http://localhost:8080/api/bay/${userId.userId}`).\r\n\r\n            then((x) => {\r\n\r\n                console.log(x.data);\r\n\r\n                setData(x.data)\r\n\r\n            }).catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    const deleted = (product) => {\r\n\r\n        axios.post(`http://localhost:8080/api/bay/delete/${product.Id}`)\r\n\r\n            .then((x) => {\r\n\r\n                console.log(x.data);\r\n\r\n                alert(\"נמחק\");\r\n\r\n                getData();\r\n\r\n            })\r\n\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            {data?.map((product, index) => (\r\n\r\n                <ul key={index}>\r\n\r\n                    <li >\r\n\r\n                        {product.Name}  {product.Type}  {product.Count}\r\n\r\n                    </li>\r\n\r\n                    <button onClick={() => deleted(product)}>gg</button>\r\n\r\n                </ul>\r\n\r\n            ))}\r\n\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ShoppingList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}