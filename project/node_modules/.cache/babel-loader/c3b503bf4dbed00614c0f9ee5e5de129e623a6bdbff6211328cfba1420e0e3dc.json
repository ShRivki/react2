{"ast":null,"code":"// import { useForm ,useFieldArray} from \"react-hook-form\"\n// import { yupResolver } from \"@hookform/resolvers/yup\"\n// import * as yup from \"yup\"\n// import { useLocation } from \"react-router-dom\"\n// import axios from \"axios\"\n// import { useDispatch, useSelector } from \"react-redux\"\n// import * as actiontype from '../Store/actions'\n// import { useState, useEffect } from \"react\";\n// import { Link, Outlet, useNavigate } from \"react-router-dom\";\n\n// const schema = yup\n//     .object({\n//         // Id: yup.number().required(),\n//         Name: yup.string().required(),\n//         UserId: yup.number().required(),\n//         CategoryId: yup.number().required(),\n//         Img: yup.string().required(),\n//         Duration: yup.number().required(),\n//         Difficulty: yup.number().required(),\n//         Description: yup.string().required(),\n//         Ingrident: yup.array().of(yup.object().shape({\n//             Name: yup.string().required(),\n//             Count: yup.number().required(),\n//             Type: yup.string(),\n//         })\n//         ),\n//         Instructions: yup.array().of(yup.object().shape({\n//             Instruction: yup.string().required(),\n//         }),\n//         )\n//     })\n//     const Input=({register,errors,label,name,placeholder})=>{\n//         return <><label>{label}</label>\n//         <br/>\n//         <input placeholder={placeholder} {...register(name)}/>\n//         <br/>\n//         <p>{errors?.message}</p>\n//         </>\n//     }\n// export default (r) => {\n//     const { user } = useSelector(state => ({ user: state.userId }));\n//     const dispach = useDispatch();\n//     const onSubmit = (data) => {\n//         ///להוסיף מוצר כאן \n//         // console.log(data);\n//         // console.log(product);\n//         // console.log(instructions);\n//         const recipe = { UserId: user, ...data };\n//         console.log(recipe);\n//         dispach({ type: actiontype.ADD_RECIPE, add: recipe })\n\n//     }\n\n//     const {\n//         register,\n//         handleSubmit,\n//         formState: { errors },\n//         control\n//     } = useForm({\n//         resolver: yupResolver(schema),\n//         defaultValues:{  Name:r?.Name,\n//             CategoryId:r?.CategoryId,\n//             Img:r?.Img,\n//             Duration: r?.Duration,\n//             Difficulty: r?.Difficulty,\n//             Description:r?.Description,\n//         },\n//     })\n//     const { fields, append, prepend, remove, swap, move, insert } = useFieldArray({\n//         control, // control props comes from useForm (optional: if you are using FormContext)\n//         name: \"test\", // unique name for your Field Array\n//       });\n\n//     const [categories, SetCategories] = useState([]);\n//     // const [product, SetProduct] = useState([{ Name: \"\", Count: 0, Type: \"\" }]);\n//     const [category, SetCategory] = useState(\"\");\n//     // const [instructions, SetInstructions] = useState([\"\"]);\n//     useEffect(() => {\n\n//         axios.get(\"http://localhost:8080/api/category\")\n//             .then((data) => {\n//                 SetCategories(data.data);\n//             });\n\n//     }, []);\n//     return <>\n//         <input type=\"text\" name=\"category\" onChange={(event) => {\n//             SetCategory(event.target.value)\n//         }} />\n//         <button onClick={() => {\n//             axios.get(\"http://localhost:8080/api/category\", category)\n//                 .then((data) => {\n//                     alert(category + `נוספה לרשימת קטגוריה`)\n//                 }).catch(() => {\n//                     alert(\"ההוספה נכשלה\")\n//                 });\n//         }}>הוסף קטגוריה</button><br />\n//         <form onSubmit={handleSubmit(onSubmit)}>\n\n//             <br />\n//             <Input Name=\"Name\" errors={errors} register={register}label=\"שם עוגה:\" placeholder=\"enter name of cake\"/>\n//             {/* <label>שם עוגה:</label><br />\n//             <input placeholder=\"enter Name\"{...register(\"Name\")} />\n//             <p>{errors.Name?.message}</p> */}\n//             <label>קטגוריה:</label><br />\n//             <select id=\"categories\" {...register(\"CategoryId\")}>\n//                 {categories.map((x) =>\n//                     <option value={x.Id}>{x.Name}</option>)}\n//             </select>\n//             <br />\n//             <Input Name=\"Img\" errors={errors} register={register}label=\"קישור לתמונה:\" placeholder=\"enter your Img\"/>\n// {/* \n//             <label>קישור לתמונה:</label><br />\n//             <input placeholder=\"enter your Img\"{...register(\"Img\")} />\n//             <p>{errors.Img?.message}</p> */}\n//             <label>רמת קושי:</label><br />\n//             <select id=\"Difficulty\" {...register(\"Difficulty\")}>\n//                 <option value=\"1\">1</option>\n//                 <option value=\"2\">2</option>\n//                 <option value=\"3\">3</option>\n//             </select>\n//             <Input Name=\"Duration\" errors={errors} register={register}label=\"משך זמן בדקות:\" placeholder=\"enter your duration\" />\n// {/* \n//             <p>{errors.Difficulty?.message}</p>\n//             <label>משך זמן בדקות:</label><br />\n//             <input placeholder=\"enter your duration\"{...register(\"Duration\")} />\n//             <p>{errors.Duration?.message}</p> */}\n//             <Input Name=\"Description\" errors={errors} register={register}label=\"תאור קצר:\" placeholder=\"enter your Difficulty\"/>\n// {/* \n//             <label>תאור קצר:</label><br />\n//             <input placeholder=\"enter your Difficulty\"{...register(\"Description\")} />\n//             <p>{errors.Description?.message}</p> */}\n//             {/* {product.map((x, i) =>\n//                 <div>\n//                     <label>שם מוצר:</label><br />\n//                     <input type=\"text\" placeholder=\"הכנס שם מוצר\" required onChange={(event) => product[i].Name = event.target.value} /><br />\n//                     <label>כמות:</label><br />\n//                     <input type=\"number\" placeholder=\"הכנס כמות\" required onChange={(event) => product[i].Count = event.target.value} /><br />\n//                     <label>סוג:</label><br />\n//                     <input type=\"text\" placeholder=\"Type\" onChange={(event) => product[i].Type = event.target.value} /><br />\n//                 </div>\n//             )} <button onClick={() => { SetProduct([...product, { Name: \"\", Count: 0, Type: \"\" }]) }}>הוספת מוצר</button> */}\n\n//             {fields.map((x, i) =>\n//                 <div>\n//                     <Input label=\"שם מוצר:\"  placeholder=\"הכנס שם מוצר\" register={`Ingrident.${i}.Name`} errors={errors}/>\n//                     {/* <label>שם מוצר:</label><br />\n//                     <input type=\"text\" placeholder=\"הכנס שם מוצר\" {...required(`Ingrident.${i}.Name`)}/><br /> */}\n//                     <Input label=\"כמות:\"  placeholder=\"הכנס כמות\" register={`Ingrident.${i}.Count`} errors={errors}/>\n//                     {/* <label>כמות:</label><br />\n//                     <input type=\"number\" placeholder=\"הכנס כמות\" {...required(`Ingrident.${i}.Count`)} /><br /> */}\n//                     <Input label=\"סוג:\"  placeholder=\"Type\" register={`Ingrident.${i}.Type`} errors={errors}/>\n// {/* \n//                     <label>סוג:</label><br />\n//                     <input type=\"text\" placeholder=\"Type\" {...required(`Ingrident.${i}.Type`)}/><br /> */}\n//                 </div>\n//             )} <button onClick={() => {append()}}>הוספת מוצר</button>\n//             {/* {instructions.map((x, i) =>\n//                 <div>\n//                     <label>הוראה:</label><br />\n//                     <input type=\"text\" placeholder=\"הכנס הוראה\" onChange={(event) => instructions[i] = event.target.value} /><br />\n//                 </div>\n//             )} <button onClick={() => { SetInstructions([...instructions, \" \"]) }}>הוספת הוראה  </button>\n//             <br />\n//             <button type=\"submit\">הוספה</button> */}\n//         </form >\n\n//     </>\n\n// }","map":{"version":3,"names":[],"sources":["C:/Users/ASUS/Desktop/REACT PROJECT/project/src/components/AddRecipes.js"],"sourcesContent":["// import { useForm ,useFieldArray} from \"react-hook-form\"\r\n// import { yupResolver } from \"@hookform/resolvers/yup\"\r\n// import * as yup from \"yup\"\r\n// import { useLocation } from \"react-router-dom\"\r\n// import axios from \"axios\"\r\n// import { useDispatch, useSelector } from \"react-redux\"\r\n// import * as actiontype from '../Store/actions'\r\n// import { useState, useEffect } from \"react\";\r\n// import { Link, Outlet, useNavigate } from \"react-router-dom\";\r\n\r\n// const schema = yup\r\n//     .object({\r\n//         // Id: yup.number().required(),\r\n//         Name: yup.string().required(),\r\n//         UserId: yup.number().required(),\r\n//         CategoryId: yup.number().required(),\r\n//         Img: yup.string().required(),\r\n//         Duration: yup.number().required(),\r\n//         Difficulty: yup.number().required(),\r\n//         Description: yup.string().required(),\r\n//         Ingrident: yup.array().of(yup.object().shape({\r\n//             Name: yup.string().required(),\r\n//             Count: yup.number().required(),\r\n//             Type: yup.string(),\r\n//         })\r\n//         ),\r\n//         Instructions: yup.array().of(yup.object().shape({\r\n//             Instruction: yup.string().required(),\r\n//         }),\r\n//         )\r\n//     })\r\n//     const Input=({register,errors,label,name,placeholder})=>{\r\n//         return <><label>{label}</label>\r\n//         <br/>\r\n//         <input placeholder={placeholder} {...register(name)}/>\r\n//         <br/>\r\n//         <p>{errors?.message}</p>\r\n//         </>\r\n//     }\r\n// export default (r) => {\r\n//     const { user } = useSelector(state => ({ user: state.userId }));\r\n//     const dispach = useDispatch();\r\n//     const onSubmit = (data) => {\r\n//         ///להוסיף מוצר כאן \r\n//         // console.log(data);\r\n//         // console.log(product);\r\n//         // console.log(instructions);\r\n//         const recipe = { UserId: user, ...data };\r\n//         console.log(recipe);\r\n//         dispach({ type: actiontype.ADD_RECIPE, add: recipe })\r\n\r\n//     }\r\n      \r\n  \r\n//     const {\r\n//         register,\r\n//         handleSubmit,\r\n//         formState: { errors },\r\n//         control\r\n//     } = useForm({\r\n//         resolver: yupResolver(schema),\r\n//         defaultValues:{  Name:r?.Name,\r\n//             CategoryId:r?.CategoryId,\r\n//             Img:r?.Img,\r\n//             Duration: r?.Duration,\r\n//             Difficulty: r?.Difficulty,\r\n//             Description:r?.Description,\r\n//         },\r\n//     })\r\n//     const { fields, append, prepend, remove, swap, move, insert } = useFieldArray({\r\n//         control, // control props comes from useForm (optional: if you are using FormContext)\r\n//         name: \"test\", // unique name for your Field Array\r\n//       });\r\n \r\n//     const [categories, SetCategories] = useState([]);\r\n//     // const [product, SetProduct] = useState([{ Name: \"\", Count: 0, Type: \"\" }]);\r\n//     const [category, SetCategory] = useState(\"\");\r\n//     // const [instructions, SetInstructions] = useState([\"\"]);\r\n//     useEffect(() => {\r\n\r\n//         axios.get(\"http://localhost:8080/api/category\")\r\n//             .then((data) => {\r\n//                 SetCategories(data.data);\r\n//             });\r\n\r\n\r\n//     }, []);\r\n//     return <>\r\n//         <input type=\"text\" name=\"category\" onChange={(event) => {\r\n//             SetCategory(event.target.value)\r\n//         }} />\r\n//         <button onClick={() => {\r\n//             axios.get(\"http://localhost:8080/api/category\", category)\r\n//                 .then((data) => {\r\n//                     alert(category + `נוספה לרשימת קטגוריה`)\r\n//                 }).catch(() => {\r\n//                     alert(\"ההוספה נכשלה\")\r\n//                 });\r\n//         }}>הוסף קטגוריה</button><br />\r\n//         <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n//             <br />\r\n//             <Input Name=\"Name\" errors={errors} register={register}label=\"שם עוגה:\" placeholder=\"enter name of cake\"/>\r\n//             {/* <label>שם עוגה:</label><br />\r\n//             <input placeholder=\"enter Name\"{...register(\"Name\")} />\r\n//             <p>{errors.Name?.message}</p> */}\r\n//             <label>קטגוריה:</label><br />\r\n//             <select id=\"categories\" {...register(\"CategoryId\")}>\r\n//                 {categories.map((x) =>\r\n//                     <option value={x.Id}>{x.Name}</option>)}\r\n//             </select>\r\n//             <br />\r\n//             <Input Name=\"Img\" errors={errors} register={register}label=\"קישור לתמונה:\" placeholder=\"enter your Img\"/>\r\n// {/* \r\n//             <label>קישור לתמונה:</label><br />\r\n//             <input placeholder=\"enter your Img\"{...register(\"Img\")} />\r\n//             <p>{errors.Img?.message}</p> */}\r\n//             <label>רמת קושי:</label><br />\r\n//             <select id=\"Difficulty\" {...register(\"Difficulty\")}>\r\n//                 <option value=\"1\">1</option>\r\n//                 <option value=\"2\">2</option>\r\n//                 <option value=\"3\">3</option>\r\n//             </select>\r\n//             <Input Name=\"Duration\" errors={errors} register={register}label=\"משך זמן בדקות:\" placeholder=\"enter your duration\" />\r\n// {/* \r\n//             <p>{errors.Difficulty?.message}</p>\r\n//             <label>משך זמן בדקות:</label><br />\r\n//             <input placeholder=\"enter your duration\"{...register(\"Duration\")} />\r\n//             <p>{errors.Duration?.message}</p> */}\r\n//             <Input Name=\"Description\" errors={errors} register={register}label=\"תאור קצר:\" placeholder=\"enter your Difficulty\"/>\r\n// {/* \r\n//             <label>תאור קצר:</label><br />\r\n//             <input placeholder=\"enter your Difficulty\"{...register(\"Description\")} />\r\n//             <p>{errors.Description?.message}</p> */}\r\n//             {/* {product.map((x, i) =>\r\n//                 <div>\r\n//                     <label>שם מוצר:</label><br />\r\n//                     <input type=\"text\" placeholder=\"הכנס שם מוצר\" required onChange={(event) => product[i].Name = event.target.value} /><br />\r\n//                     <label>כמות:</label><br />\r\n//                     <input type=\"number\" placeholder=\"הכנס כמות\" required onChange={(event) => product[i].Count = event.target.value} /><br />\r\n//                     <label>סוג:</label><br />\r\n//                     <input type=\"text\" placeholder=\"Type\" onChange={(event) => product[i].Type = event.target.value} /><br />\r\n//                 </div>\r\n//             )} <button onClick={() => { SetProduct([...product, { Name: \"\", Count: 0, Type: \"\" }]) }}>הוספת מוצר</button> */}\r\n\r\n//             {fields.map((x, i) =>\r\n//                 <div>\r\n//                     <Input label=\"שם מוצר:\"  placeholder=\"הכנס שם מוצר\" register={`Ingrident.${i}.Name`} errors={errors}/>\r\n//                     {/* <label>שם מוצר:</label><br />\r\n//                     <input type=\"text\" placeholder=\"הכנס שם מוצר\" {...required(`Ingrident.${i}.Name`)}/><br /> */}\r\n//                     <Input label=\"כמות:\"  placeholder=\"הכנס כמות\" register={`Ingrident.${i}.Count`} errors={errors}/>\r\n//                     {/* <label>כמות:</label><br />\r\n//                     <input type=\"number\" placeholder=\"הכנס כמות\" {...required(`Ingrident.${i}.Count`)} /><br /> */}\r\n//                     <Input label=\"סוג:\"  placeholder=\"Type\" register={`Ingrident.${i}.Type`} errors={errors}/>\r\n// {/* \r\n//                     <label>סוג:</label><br />\r\n//                     <input type=\"text\" placeholder=\"Type\" {...required(`Ingrident.${i}.Type`)}/><br /> */}\r\n//                 </div>\r\n//             )} <button onClick={() => {append()}}>הוספת מוצר</button>\r\n//             {/* {instructions.map((x, i) =>\r\n//                 <div>\r\n//                     <label>הוראה:</label><br />\r\n//                     <input type=\"text\" placeholder=\"הכנס הוראה\" onChange={(event) => instructions[i] = event.target.value} /><br />\r\n//                 </div>\r\n//             )} <button onClick={() => { SetInstructions([...instructions, \" \"]) }}>הוספת הוראה  </button>\r\n//             <br />\r\n//             <button type=\"submit\">הוספה</button> */}\r\n//         </form >\r\n\r\n//     </>\r\n\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}