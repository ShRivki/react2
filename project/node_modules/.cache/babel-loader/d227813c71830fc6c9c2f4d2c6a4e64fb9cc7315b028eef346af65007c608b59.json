{"ast":null,"code":"// import axios from \"axios\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { useState, useEffect } from \"react\";\n// import { type } from \"@testing-library/user-event/dist/type\";\n// import * as actiontype from '../Store/actions'\n// export default () => {\n//    const user = useSelector(state => (state.userId));\n//    const [shoppingList, SetShoppingList] = useState([])\n\n//    const addProduct = (product) => {\n//       const findIndex = shoppingList.findIndex(x => x.Id == product.Id);\n//       axios.post(`http://localhost:8080/api/bay/edit`, { Name: product.Name, UserId: user, Count: product.Count + operator })\n//    }\n//    const [operator, SetOperator] = useState(null);\n//    //   const  {shoppingList}  = useSelector(state => ({ shoppingList: state.shoppingList }));\n//    const dispach = useDispatch();\n//    useEffect(() => {\n//       axios.get(`http://localhost:8080/api/bay/${user}`).then(data => {\n//          SetShoppingList(data.data);\n//       }).catch(() => { })\n//       // dispach({type:actiontype.GET_SHOPPING_LIST});\n\n//       // if (operator != null)\n//       //    operator == -1 && product.Count - 1 == 0 ? axios.post(`http://localhost:8080/api/bay/edit`, product.Name, user, product.Count + operator).then((data) => {\n//       //       console.log(data)\n//       //    }) : axios.post(`http://localhost:8080/api/bay/delete/${user}/${product.Id}`).then((data) => console.log(data));\n//    }, []);\n//    console.log(shoppingList);\n//    return (<div>\n//       {shoppingList.map((product) =>\n//          <div class=\"product\">\n//             <label>מוצר: </label>\n//             {product.Name}\n//             <label> כמות: </label>\n//             {product.Count}\n//             <button onClick={() => {\n//                if (product.Count == 1) {\n//                   axios.post(`http://localhost:8080/api/bay/delete/${product.Id}`).then(() => {\n//                      alert(\"נמחק\")\n//                   }).catch(() => {\n//                      alert(\"שגיאה \")\n//                   })\n//                }\n//             }}>-</button>\n//             <button onClick={() => {\n//                alert(`+1 ${product.Name}`)\n//             }}>+</button>\n//          </div>\n//       )}\n//    </div>\n//    )\n// }\n\n// jest-dom adds custom jest matchers for asserting on DOM nodes.\n\n// allows you to do things like:\n\n// expect(element).toHaveTextContent(/react/i)\n\n// learn more: https://github.com/testing-library/jest-dom\n\n// import '@testing-library/jest-dom';\n\n// import axios from \"axios\";\n\n// import { useEffect, useState } from \"react\";\n\n// import { useSelector } from \"react-redux\";\n\n// import { useNavigate } from \"react-router-dom\";\n\n// const ShoppingList = (userId) => {\n\n//     const nav = useNavigate()\n\n//     console.log(userId)\n\n//     const [data, setData] = useState([]);\n\n//     useEffect(() => {\n\n//         getData();\n\n//     }, [])\n\n//     const getData = () => {\n\n//         axios.get(`http://localhost:8080/api/bay/${userId.userId}`).\n\n//             then((x) => {\n\n//                 console.log(x.data);\n\n//                 setData(x.data)\n\n//             }).catch(err => console.log(err))\n\n//     }\n\n//     const deleted = (product) => {\n\n//         axios.post(`http://localhost:8080/api/bay/delete/${product.Id}`)\n\n//             .then((x) => {\n\n//                 console.log(x.data);\n\n//                 alert(\"נמחק\");\n\n//                 getData();\n\n//             })\n\n//             .catch(err => console.log(err))\n\n//     }\n\n//     return (\n\n//         <>\n\n//             {data?.map((product, index) => (\n\n//                 <ul key={index}>\n\n//                     <li >\n\n//                         {product.Name}  {product.Type}  {product.Count}\n\n//                     </li>\n\n//                     <button onClick={() => deleted(product)}>gg</button>\n\n//                 </ul>\n\n//             ))}\n\n//         </>\n\n//     )\n\n// }\n\n// export default ShoppingList;","map":{"version":3,"names":[],"sources":["C:/Users/ASUS/Desktop/REACT PROJECT/project/src/components/‎ShoppingList.js"],"sourcesContent":["// import axios from \"axios\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { type } from \"@testing-library/user-event/dist/type\";\r\n// import * as actiontype from '../Store/actions'\r\n// export default () => {\r\n//    const user = useSelector(state => (state.userId));\r\n//    const [shoppingList, SetShoppingList] = useState([])\r\n\r\n\r\n//    const addProduct = (product) => {\r\n//       const findIndex = shoppingList.findIndex(x => x.Id == product.Id);\r\n//       axios.post(`http://localhost:8080/api/bay/edit`, { Name: product.Name, UserId: user, Count: product.Count + operator })\r\n//    }\r\n//    const [operator, SetOperator] = useState(null);\r\n//    //   const  {shoppingList}  = useSelector(state => ({ shoppingList: state.shoppingList }));\r\n//    const dispach = useDispatch();\r\n//    useEffect(() => {\r\n//       axios.get(`http://localhost:8080/api/bay/${user}`).then(data => {\r\n//          SetShoppingList(data.data);\r\n//       }).catch(() => { })\r\n//       // dispach({type:actiontype.GET_SHOPPING_LIST});\r\n\r\n//       // if (operator != null)\r\n//       //    operator == -1 && product.Count - 1 == 0 ? axios.post(`http://localhost:8080/api/bay/edit`, product.Name, user, product.Count + operator).then((data) => {\r\n//       //       console.log(data)\r\n//       //    }) : axios.post(`http://localhost:8080/api/bay/delete/${user}/${product.Id}`).then((data) => console.log(data));\r\n//    }, []);\r\n//    console.log(shoppingList);\r\n//    return (<div>\r\n//       {shoppingList.map((product) =>\r\n//          <div class=\"product\">\r\n//             <label>מוצר: </label>\r\n//             {product.Name}\r\n//             <label> כמות: </label>\r\n//             {product.Count}\r\n//             <button onClick={() => {\r\n//                if (product.Count == 1) {\r\n//                   axios.post(`http://localhost:8080/api/bay/delete/${product.Id}`).then(() => {\r\n//                      alert(\"נמחק\")\r\n//                   }).catch(() => {\r\n//                      alert(\"שגיאה \")\r\n//                   })\r\n//                }\r\n//             }}>-</button>\r\n//             <button onClick={() => {\r\n//                alert(`+1 ${product.Name}`)\r\n//             }}>+</button>\r\n//          </div>\r\n//       )}\r\n//    </div>\r\n//    )\r\n// }\r\n\r\n\r\n\r\n// jest-dom adds custom jest matchers for asserting on DOM nodes.\r\n\r\n// allows you to do things like:\r\n\r\n// expect(element).toHaveTextContent(/react/i)\r\n\r\n// learn more: https://github.com/testing-library/jest-dom\r\n\r\n// import '@testing-library/jest-dom';\r\n\r\n// import axios from \"axios\";\r\n\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// import { useSelector } from \"react-redux\";\r\n\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const ShoppingList = (userId) => {\r\n\r\n//     const nav = useNavigate()\r\n\r\n//     console.log(userId)\r\n\r\n//     const [data, setData] = useState([]);\r\n\r\n//     useEffect(() => {\r\n\r\n//         getData();\r\n\r\n//     }, [])\r\n\r\n//     const getData = () => {\r\n\r\n//         axios.get(`http://localhost:8080/api/bay/${userId.userId}`).\r\n\r\n//             then((x) => {\r\n\r\n//                 console.log(x.data);\r\n\r\n//                 setData(x.data)\r\n\r\n//             }).catch(err => console.log(err))\r\n\r\n//     }\r\n\r\n//     const deleted = (product) => {\r\n\r\n//         axios.post(`http://localhost:8080/api/bay/delete/${product.Id}`)\r\n\r\n//             .then((x) => {\r\n\r\n//                 console.log(x.data);\r\n\r\n//                 alert(\"נמחק\");\r\n\r\n//                 getData();\r\n\r\n//             })\r\n\r\n//             .catch(err => console.log(err))\r\n\r\n//     }\r\n\r\n//     return (\r\n\r\n//         <>\r\n\r\n//             {data?.map((product, index) => (\r\n\r\n//                 <ul key={index}>\r\n\r\n//                     <li >\r\n\r\n//                         {product.Name}  {product.Type}  {product.Count}\r\n\r\n//                     </li>\r\n\r\n//                     <button onClick={() => deleted(product)}>gg</button>\r\n\r\n//                 </ul>\r\n\r\n//             ))}\r\n\r\n//         </>\r\n\r\n//     )\r\n\r\n// }\r\n\r\n// export default ShoppingList;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}